name: push

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_call:
    secrets:
      GH_ACTIONS_DAVIDEPUCCI:
        required: true

permissions:
  actions: read
  attestations: none
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: write
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v6
  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: codespell-project/actions-codespell@v2
        with:
          check_filenames: true
          ignore_words_list: erro,nd
  super-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: super-linter/super-linter@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_DAVIDEPUCCI }}
          VALIDATE_ALL_CODEBASE: false
  docker:
    runs-on: ubuntu-latest
    needs: [commitlint, codespell, super-linter]
    if: >-
      success() &&
      github.ref == 'refs/heads/master' &&
      (github.event_name == 'repository_dispatch' || github.event_name == 'push')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACTIONS_DAVIDEPUCCI }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/streambinder/streambinder:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
